version: '3'
services:
  api:
    build:
      context: ./camwatch-server
    ports:
      - "8080:8080"
    depends_on:
      - db
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/DB_CAMWATCH
      SPRING_DATASOURCE_USERNAME: gopresenceadmin 
      SPRING_DATASOURCE_PASSWORD: Nsg2*J3O5CfU
    volumes:
      - ./agent/agent.zip:/tmp/agent.zip
    networks:
      - internal_network

  auth-server:
    build:
      context: ./auth-server
    ports:
      - "8081:8080"
    depends_on:
      - db
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/DB_CAMWATCH
      SPRING_DATASOURCE_USERNAME: gopresenceadmin 
      SPRING_DATASOURCE_PASSWORD: Nsg2*J3O5CfU 
    networks:
      - internal_network

  frontend:
    build:
      context: ./client
    ports:
      - "8082:80"
    networks:
      - internal_network

  db:
    build:
      context: ./db
    environment:
      POSTGRES_DB: DB_CAMWATCH
      POSTGRES_USER: gopresenceadmin
      POSTGRES_PASSWORD: Nsg2*J3O5CfU 
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    networks:
      - internal_network

volumes:
  pgdata:

networks:
  internal_network:
    driver: bridge
